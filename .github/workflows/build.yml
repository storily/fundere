name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build (ARM64)

    steps:
    - uses: actions/checkout@v4

    - name: Configure toolchain
      run: |
        rustup toolchain install --profile minimal --no-self-update stable
        rustup target add aarch64-unknown-linux-musl
        rustup default stable

    - name: Configure caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('Cargo.lock') }}
        restore-keys: ${{ runner.os }}-cargo-build-

    - name: Configure compiler
      run: |
        rm .cargo/config.toml
        sudo apt install -y musl-tools gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu clang llvm
        echo 'CC_aarch64_unknown_linux_musl=clang' >> $GITHUB_ENV
        echo 'AR_aarch64_unknown_linux_musl=llvm-ar' >> $GITHUB_ENV
        echo 'CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_RUSTFLAGS=-Clink-self-contained=yes -Clinker=rust-lld' >> $GITHUB_ENV

    - name: Build
      run: cargo build --target aarch64-unknown-linux-musl --release

    - name: Upload output
      uses: actions/upload-artifact@v3
      with:
        retention-days: 7
        path: "target/aarch64-unknown-linux-musl/release/fundere"
        name: fundere-arm64-${{ github.sha }}
